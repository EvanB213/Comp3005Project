CREATE TABLE Members (
    member_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    date_of_birth DATE,
	password VARCHAR(20),
	goal_statement TEXT
);

CREATE TABLE Routines (
	routine_number SERIAL PRIMARY KEY,
	member_id INT,
	time_limit TIME,
	exercise_list VARCHAR(255),
	num_reps INT,
	FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

CREATE TABLE Fitness_Goals (
	goal_number SERIAL PRIMARY KEY,
	member_id INT,
	start_date DATE,
	desired_weight DECIMAL,
	goal_time DATE,
	FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

CREATE TABLE Fitness_Achievements (
	achievement_num SERIAL PRIMARY KEY,
	member_id INT,
	date_achieved DATE,
	goal_description VARCHAR(255),
	FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

CREATE TABLE Health_Metrics (
	metric_id SERIAL PRIMARY KEY,
	member_id INT,
	last_updated DATE,
	height DECIMAL,
	weight DECIMAL,
	avg_blood_pressure VARCHAR(10),
	FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

CREATE TABLE Trainers (
    trainer_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
	email VARCHAR(100) UNIQUE,
	date_of_birth DATE,
	password VARCHAR(20),
    specialization VARCHAR(100)
);

CREATE TABLE Trainer_Schedules (
	schedule_id SERIAL PRIMARY KEY,
	trainer_id INT,
	start_time TIMESTAMP,
	end_time TIMESTAMP,
	FOREIGN KEY (trainer_id) REFERENCES Trainers(trainer_id)
);

CREATE TABLE Admin_Staff (
	admin_id SERIAL PRIMARY KEY,
	email VARCHAR(100) UNIQUE,
	password VARCHAR(20)
);

CREATE TABLE Equipment (
	equipment_id SERIAL PRIMARY KEY,
	name VARCHAR(100),
	last_checkup DATE,
	description VARCHAR(255),
	issues VARCHAR(255),
	admin_id INT,
	FOREIGN KEY (admin_id) REFERENCES Admin_Staff(admin_id)
);

CREATE TABLE Room_Bookings (
    room_id SERIAL PRIMARY KEY,
    admin_id INT,
	start_date DATE,
	end_date DATE,
    capacity INT,
	FOREIGN KEY (admin_id) REFERENCES Admin_Staff(admin_id)
);

-- Revised Classes table
CREATE TABLE Classes (
    class_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    room_id INT,
    trainer_id INT,
	participants INT[], -- Utilizes array of integer values representing member_ids
    schedule TIMESTAMP,
	duration TIME,
    FOREIGN KEY (room_id) REFERENCES Room_Bookings(room_id),
    FOREIGN KEY (trainer_id) REFERENCES Trainers(trainer_id)
);

CREATE TABLE Sessions (
    session_id SERIAL PRIMARY KEY,
	room_id INT,
    member_id INT,
    trainer_id INT,
	schedule TIMESTAMP,
	duration TIME,
	FOREIGN KEY (room_id) REFERENCES Room_Bookings(room_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id),
    FOREIGN KEY (trainer_id) REFERENCES Trainers(trainer_id)
);

-- Revised Bookings table
CREATE TABLE Bookings (
    booking_id SERIAL PRIMARY KEY,
    member_id INT,
    class_id INT NULL, -- Class ID null if private session, otherwise session ID null
	session_id INT NULL,
    FOREIGN KEY (member_id) REFERENCES Members(member_id),
    FOREIGN KEY (class_id) REFERENCES Classes(class_id),
    FOREIGN KEY (session_id) REFERENCES Sessions(session_id)
);

CREATE TABLE Bills (
	bill_id SERIAL PRIMARY KEY,
	amount_due DECIMAL,
	due_date DATE,
	member_id INT NOT NULL,
	admin_id INT,
	
	FOREIGN KEY (member_id) REFERENCES Members(member_id),
	FOREIGN KEY (admin_id) REFERENCES Admin_Staff(admin_id)
);
